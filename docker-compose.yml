services:
  mysql-db:
    image: mysql:latest
    container_name: docker-compose-mysql-db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=events_db
      - MYSQL_ROOT_HOST=%  # Allow root login from any host
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
    networks:
      my-network:
        ipv4_address: 172.18.0.99
    volumes:
      - db:/var/lib/mysql

  spring-boot-app:
    image: mohamed329/events-backend
    container_name: app-back
    ports:
      - "8085:8085"
    depends_on:
      - mysql-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://docker-compose-mysql-db:3306/events_db?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_SHOW_SQL=false
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SERVER_PORT=8085
      - SERVER_ADDRESS=0.0.0.0
      - SERVER_SERVLET_CONTEXT_PATH=/events
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_ENDPOINTS_WEB_BASE_PATH=/actuator
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      - SPRING_SECURITY_USER_PASSWORD=none
    networks:
      - my-network
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - my-network
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - my-network
    restart: always

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    ports:
      - "8081:8081"
    networks:
      - my-network
    restart: always

  sonarqube:
    image: sonarqube:8.9.7-community
    container_name: sonarqube
    ports:
      - "9000:9000"
    networks:
      - my-network
    restart: always

networks:
  my-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  db:
  grafana-data:
